import "radiant.proto";

package radiant.world.protocol;

/*
 * Move to this one day...
 */
message BoxedObject {
   extensions 1000 to 2999;
   enum Type {
      Point3   = 1;
      AABB     = 2;
   }
   required Type type = 1;
};

extend BoxedObject {
   optional radiant.protocol.point3    point3 = 1000;
   optional radiant.protocol.aabb      aabb   = 1001;
   optional radiant.protocol.sphere    sphere = 1002;
};

message Object {
   enum Types {
      GridTileType         = 1;
      ListType             = 3;
      ContainerType        = 4;
      RigType              = 5;
      AnimationQueueType   = 6;
      ShapeType            = 7;
      GridType             = 8;
      ObjectType           = 9;
      DequeType            = 10;
      VectorType           = 11;
      Region2dObjType      = 12;
      PointType            = 13;
      TransformType        = 14;
      BoundsType           = 15;
      AABBType             = 16;
      SphereType           = 17;
      NumObjectTypes       = 18;
   }

   message Item {
      optional string   name           = 1;
      optional uint64   object_value   = 2;
      optional string   string_value   = 3;
      optional int32    integer_value  = 4;
      optional radiant.protocol.color color_value = 5;
   }

   message Container {
      enum Type {
         OBJECT         = 1;
         INTEGER        = 2;
         STRING         = 3;
         COLOR          = 4;
      }

      message Full {
         repeated Item     items    = 1;
      }
      message Incremental { 
         repeated Item     items    = 1;
         repeated string   removed  = 2;
      }
      optional Full        full        = 1;
      optional Incremental incremental = 2;
   }

   message List {
      message Full {
         repeated Item     items   = 1;
      }
      message Incremental { 
         repeated Item     added   = 1;
         repeated Item     removed = 2;
      }
      optional Full        full = 1;
      optional Incremental incremental = 2;
   }

   message Deque {
      repeated Item        items   = 1;
   }

   message Vector {
      repeated Item        items   = 1;
   }

   message AnimationQueue {
      required string      name = 1;
      required uint32      start_time = 2;
      required uint32      end_time = 3;
      required uint32      flags = 4;
   }

   message Grid {
      message Full {
         required radiant.protocol.ibounds3  bounds = 1;
      }
      message Incremental {
         required radiant.protocol.ibounds3  bounds = 1;
      }
      optional Full        full = 1;
      optional Incremental incremental = 2;
   }

   message GridTile {
      optional uint64                     grid_id = 1;
      required radiant.protocol.ipoint3   origin = 2;
      required bytes                      cells  = 3;
      required bytes                      palette = 4;
      required int32                      cell_count = 5;
   };

   message Shape {
      required radiant.protocol.transform   transform = 1;
      required radiant.protocol.ibounds3    collision_shape = 2;
      optional radiant.protocol.point3      origin = 3;
   }


   required uint64                  id                = 1;
   required int32                   object_type       = 2;
   required uint64                  timestamp         = 3;
   required int32                   userPointerType   = 4;

   optional Container         container      = 10;
   optional Grid              grid           = 11;
   optional GridTile          tile           = 12;
   optional Shape             shape = 14;
   optional AnimationQueue    animation      = 13;
   optional List              list           = 15;
   optional Deque             deque          = 17;
   optional Vector            vector         = 18;
   optional radiant.protocol.point3    point          = 19;
   optional radiant.protocol.transform    transform          = 20;
   optional radiant.protocol.ibounds3    bounds          = 21;
   optional radiant.protocol.Rig       rig            = 22;
   optional radiant.protocol.region2   region2        = 23;
   optional radiant.protocol.aabb      aabb           = 24;
   optional BoxedObject                boxed          = 25;
   optional radiant.protocol.sphere    sphere         = 26;
}

message Update {
   repeated Object objects = 1;
}

message trait {
   message Counter {
      required int32               value = 1;
   }

   message Stockpile {
      required radiant.protocol.ibounds3      bounds = 1;
   }

   message String {
      required string              value = 1;
   }

   message PropertyBag {
      message Item {
         required    string      key      = 1;
         required    string      value    = 2;
      }
      repeated Item              items = 1;
   }

   message Shape {
      required radiant.protocol.transform   transform = 1;
   }

   message Paperdoll {
      message Item {
         required    sint32      slot     = 1;
         required    uint64      item_id  = 2;
      }
      repeated Item              items    = 1;
   }

   message Container {
      required       int32       size     = 1;
      repeated       uint32      contents = 2;
   };

   message WorldView {
   }

   message Mesh {
      message Item {
         required string         name        = 1;
         optional string         attached_to = 2;
         repeated Item           children    = 3;
      }
      required Item              root        = 1;
   }

   message Animation {
      message Sequence {
         message Item {
            enum DurationType {
               COMPUTE_DURATION  = 1;
               TIME_BASED        = 2;
               DISTANCE_BASED    = 3;
            }
            required string            name      = 1;
            required float             duration  = 2;
            required DurationType      type      = 3;
         }
         repeated Item                 items = 2;
      }
      optional Sequence                idle        = 1;
      optional Sequence                moving      = 2;
   }

   message Grid {
      message GridTile {
         message BrickGroupSelector {
            required int32          x = 1;
            required int32          y = 2;
            required int32          z = 3;
            required int32          voxel = 4;
         }
         required radiant.protocol.ipoint3        origin = 1;
         required bytes                cells  = 2;
         required bytes                palette = 3;
         repeated BrickGroupSelector   selectors = 4;
      };
      repeated GridTile                 tiles  = 2;
   }

   required uint64               entity_id      = 1;
   required uint64               generation     = 2;
   required int32                kind           = 3;
   required string               name           = 4;
   
   // do not change without changing c++ definition, too!
   optional Counter              counter        = 10;
   optional Shape                shape          = 11;
   optional Paperdoll            paperdoll      = 12;
   optional Container            container      = 13;
   optional WorldView            world_view     = 14;
   optional Mesh                 mesh           = 15;
   optional Animation            animation      = 16;
   optional Grid                 grid           = 17;
   optional String               stringval      = 18;
   optional Stockpile            stockpile      = 19;
}
