package radiant.protocol;

option optimize_for = SPEED;

message point4i {
   required int32             x = 1;
   required int32             y = 2;
   required int32             z = 3;
   required int32             w = 4;
}

message point4f {
   required float             x = 1;
   required float             y = 2;
   required float             z = 3;
   required float             w = 4;
}

message point3i {
   required int32             x = 1;
   required int32             y = 2;
   required int32             z = 3;
}

message point3f {
   required float             x = 1;
   required float             y = 2;
   required float             z = 3;
}

message point2i {
   required int32             x = 1;
   required int32             y = 2;
}

message point2f {
   required float             x = 1;
   required float             y = 2;
}

message point1i {
   required int32             x = 1;
}

message point1f {
   required float             x = 1;
}

message cube3i {
   required point3i     min = 1;
   required point3i     max = 2;
   optional int32       tag = 3;
}

message cube3f {
   required point3f     min = 1;
   required point3f     max = 2;
   optional int32       tag = 3;
}

message cube2i {
   required point2i     min = 1;
   required point2i     max = 2;
   optional int32       tag = 3;
}

message cube2f {
   required point2f     min = 1;
   required point2f     max = 2;
   optional int32       tag = 3;
}

message cube1i {
   required point1i     min = 1;
   required point1i     max = 2;
   optional int32       tag = 3;
}

message cube1f {
   required point1f     min = 1;
   required point1f     max = 2;
   optional int32       tag = 3;
}

message region3i {
   repeated cube3i     cubes = 1;
   optional color      color = 2;
}

message region3f {
   repeated cube3f     cubes = 1;
   optional color      color = 2;
}

message region2i {
   repeated cube2i     cubes = 1;
   optional color      color = 2;
}

message region2f {
   repeated cube2f     cubes = 1;
   optional color      color = 2;
}

message region1i {
   repeated cube1i     cubes = 1;
   optional color      color = 2;
}

message region1f {
   repeated cube1f     cubes = 1;
   optional color      color = 2;
}

message sphere3f {
   required point3f  center = 1;
   required float    radius = 2;
}

message ray3f {
   required point3f   origin = 1;
   required point3f   direction = 2;
}

message quaternion {
   required float    x = 1;
   required float    y = 2;
   required float    z = 3;
   required float    w = 4;
}

message transform {
   required point3f      position = 1;
   required quaternion   orientation = 2;
}

message color {
   required uint32      r = 1;
   required uint32      g = 2;
   required uint32      b = 3;
   optional uint32      a = 4 [ default = 255 ];
}

// xxx - put "debug_" in front of all of these
message line {
   required point3f        p0 = 1;
   required point3f        p1 = 2;
   optional color          color = 3;
}

message triangle {
   required point3f        p0 = 1;
   required point3f        p1 = 2;
   required point3f        p2 = 3;
   optional color          color = 4;
}

message quad {
   required point3f        p0 = 1;
   required point3f        p1 = 2;
   required point3f        p2 = 3;
   required point3f        p3 = 4;
   optional color           color = 5;
}

message box {
   required point3f        minimum = 1;
   required point3f        maximum = 2;
   optional color           color = 3;
}

message coord {
   required int32      x = 1;
   required int32      y = 2;
   required int32      z = 3;
   optional color      color = 5;
}

message shapelist {
   repeated line           line = 1;
   repeated triangle       triangle = 2;
   repeated quad           quad = 3;
   repeated box            box = 4;
   repeated coord          coords = 5;
   repeated region3i       region = 6;
}

message cursor_description {
   enum cursor_type {
      NO_CURSOR         = 0;
      ADJACENT_BRICK    = 1;
      SELECTED_BRICK    = 2;
   }
   required cursor_type     type = 1;
}
